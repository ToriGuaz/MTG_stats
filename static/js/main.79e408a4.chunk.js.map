{"version":3,"sources":["firebaseConfig.js","LandingPage.jsx","Usuario.jsx","Oponente.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","LandingPage","_ref","onJoinGame","nombre","setNombre","useState","nombrePartida","setNombrePartida","games","setGames","useEffect","gamesRef","ref","onValue","snapshot","data","val","gamesList","Object","keys","map","key","React","createElement","type","value","onChange","e","target","isValid","test","length","sanitizedValue","DOMPurify","sanitize","alert","placeholder","maxLength","onClick","handleCreateGame","set","jugadores","vida","localStorage","setItem","handleJoinGame","Usuario","gameId","nombreJugador","getItem","setVida","jugadorRef","actualizarVida","nuevaVida","className","Oponente","opponentID","vidaRef","App","gameID","setGameID","opponents","setOpponents","userID","gameRef","playerRef","push","update","id","players","playerList","values","filter","remove","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.79e408a4.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, push, onValue, remove, update } from \"firebase/database\";\r\n\r\n// Configuración de Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTzfDF8Hqxob52odaaoyUmTOhbu54jbIY\",\r\n  authDomain: \"mtgstats-864da.firebaseapp.com\",\r\n  databaseURL: \"https://mtgstats-864da-default-rtdb.firebaseio.com\",\r\n  projectId: \"mtgstats-864da\",\r\n  storageBucket: \"mtgstats-864da.appspot.com\",\r\n  messagingSenderId: \"68211953531\",\r\n  appId: \"1:68211953531:web:3619c6cc482a2bfeeb77de\",\r\n  measurementId: \"G-78HCZP9LD6\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\n\r\nexport { db, ref, set, push, onValue, remove, update };","import React, { useState, useEffect } from 'react';\r\nimport { db } from './firebaseConfig';\r\nimport { ref, set, onValue } from 'firebase/database';\r\nimport DOMPurify from 'dompurify';\r\n\r\nconst LandingPage = ({ onJoinGame }) => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [nombrePartida, setNombrePartida] = useState('');\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const gamesRef = ref(db, 'games/');\r\n    onValue(gamesRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      const gamesList = data ? Object.keys(data).map(key => ({ nombre: key, ...data[key] })) : [];\r\n      setGames(gamesList);\r\n    });\r\n  }, []);\r\n\r\n  const handleJoinGame = () => {\r\n    if (nombre && nombrePartida) {\r\n      localStorage.setItem('nombreJugador', nombre); // Guardar en localStorage\r\n      onJoinGame(nombre, nombrePartida);\r\n    }\r\n  };\r\n\r\n  const handleCreateGame = () => {\r\n    if (nombre && nombrePartida) {\r\n      set(ref(db, `games/${nombrePartida}`), {\r\n        jugadores: {\r\n          [nombre]: { nombre, vida: 40 },\r\n        },\r\n      });\r\n      localStorage.setItem('nombreJugador', nombre); // Guardar en localStorage\r\n      onJoinGame(nombre, nombrePartida);\r\n    }\r\n  };\r\n\r\n  // Función de sanitización y validación\r\n  const handleNombreChange = (e) => {\r\n    const value = e.target.value;\r\n    const isValid = /^[a-zA-Z0-9\\s]*$/.test(value); \r\n\r\n    if (isValid && value.length <= 20) {\r\n      const sanitizedValue = DOMPurify.sanitize(value);\r\n      setNombre(sanitizedValue);\r\n    } else if (!isValid) {\r\n      alert(\"Caracteres no válidos. Usa solo letras, números y espacios.\");\r\n    }\r\n  };\r\n\r\n  const handleNombrePartidaChange = (e) => {\r\n    const value = e.target.value;\r\n    const isValid = /^[a-zA-Z0-9\\s]*$/.test(value); \r\n\r\n    if (isValid && value.length <= 20) {\r\n      const sanitizedValue = DOMPurify.sanitize(value);\r\n      setNombrePartida(sanitizedValue);\r\n    } else if (!isValid) {\r\n      alert(\"Caracteres no válidos. Usa solo letras, números y espacios.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Magic: The Gathering - Contador de Vidas</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={nombre}\r\n        onChange={handleNombreChange} \r\n        placeholder=\"Ingresa tu nombre\"\r\n        maxLength={20} \r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={nombrePartida}\r\n        onChange={handleNombrePartidaChange} \r\n        placeholder=\"Ingresa el nombre de la partida\"\r\n        maxLength={10} \r\n      />\r\n      <button onClick={handleCreateGame}>Crear Partida</button>\r\n      <button onClick={handleJoinGame}>Unirse a Partida</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { db } from './firebaseConfig';\r\nimport { ref, set, onValue } from 'firebase/database';\r\n\r\nconst Usuario = ({ gameId }) => {\r\n  const nombreJugador = localStorage.getItem('nombreJugador');\r\n  const [vida, setVida] = useState(40);\r\n\r\n  useEffect(() => {\r\n    const jugadorRef = ref(db, `games/${gameId}/jugadores/${nombreJugador}/vida`);\r\n    onValue(jugadorRef, (snapshot) => {\r\n      setVida(snapshot.val() || 40);\r\n    });\r\n  }, [gameId, nombreJugador]);\r\n\r\n  const actualizarVida = (nuevaVida) => {\r\n    setVida(nuevaVida);\r\n    const jugadorRef = ref(db, `games/${gameId}/jugadores/${nombreJugador}/vida`);\r\n    set(jugadorRef, nuevaVida);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenedorUsuario\">\r\n      <h1>{nombreJugador}</h1>\r\n      <h2>Vida: {vida}</h2>\r\n      <button onClick={() => actualizarVida(vida + 1)}>+1</button>\r\n      <button onClick={() => actualizarVida(vida - 1)}>-1</button>\r\n      <button onClick={() => actualizarVida(vida + 5)}>+5</button>\r\n      <button onClick={() => actualizarVida(vida - 5)}>-5</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Usuario;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, ref, onValue } from './firebaseConfig';\r\n\r\nconst Oponente = ({ opponentID }) => {\r\n    const [vida, setVida] = useState(40);\r\n\r\n    useEffect(() => {\r\n        const vidaRef = ref(db, `users/${opponentID}/vida`);\r\n        onValue(vidaRef, (snapshot) => {\r\n            setVida(snapshot.val());\r\n        });\r\n    }, [opponentID]);\r\n\r\n    return (\r\n        <div className=\"oponente\">\r\n            <h2>Oponente</h2>\r\n            <p>Vida: {vida}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Oponente;\r\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db, ref, push, remove, onValue, update } from './firebaseConfig';\r\nimport LandingPage from './LandingPage';\r\nimport Usuario from './Usuario';\r\nimport Oponente from './Oponente';\r\n\r\nfunction App() {\r\n  const [gameID, setGameID] = useState(null);\r\n  const [opponents, setOpponents] = useState([]);\r\n  const userID = localStorage.getItem('userID');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n      const gameRef = ref(db, `games/${gameID}/players`);\r\n\r\n      // Agregar jugador a la partida usando update en lugar de set\r\n      const playerRef = push(gameRef);\r\n      update(playerRef, { id: userID });\r\n\r\n      // Escuchar cambios en los jugadores de la partida\r\n      onValue(gameRef, (snapshot) => {\r\n          const players = snapshot.val();\r\n          const playerList = players ? Object.values(players) : [];\r\n          setOpponents(playerList.filter(id => id !== userID));\r\n      });\r\n\r\n      // Eliminar jugador al desconectarse\r\n      return () => {\r\n          remove(playerRef);\r\n      };\r\n  }, [gameID, userID]);\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {gameID === null ? (\r\n        <LandingPage />\r\n      ) : (\r\n        <>\r\n          <Usuario userID={userID} />\r\n          {opponents.map(opponentID => (\r\n            <Oponente key={opponentID} opponentID={opponentID} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}