{"version":3,"sources":["firebaseConfig.js","Componets/LandingPage.jsx","Componets/PrincipalPlayer.jsx","Componets/Opponent.jsx","Componets/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","LandingPage","_ref","onGameSelect","inputGameName","setGameName","useState","inputPlayerName","setPlayerName","games","setGames","gameArray","useRef","useEffect","gamesRef","ref","onValue","snapshot","data","val","gameList","Object","keys","map","id","gameName","current","savedPlayerName","localStorage","getItem","removePlayerFromPreviousGame","previousGameID","playerID","playerRef","remove","then","console","log","gameRef","players","length","catch","error","React","createElement","className","type","placeholder","value","onChange","e","target","htmlFor","gameID","alert","push","key","setItem","set","playerName","life","mana","a","b","c","d","x","handleGameSelect","disabled","selected","game","onClick","createGame","namesArray","includes","newGameRef","newGameID","message","PrincipalPlayer","setLife","setMana","changeLife","newLife","update","changeMana","newMana","unsubscribe","undefined","JSON","stringify","color","Opponent","opponentID","lifeCount","setLifeCount","opponentName","setOpponentName","warn","entries","filter","_ref2","_","_ref3","Game","setPlayers","principalPlayerID","dbRef","get","child","exists","App","setGameID","isLandingPageVisible","setIsLandingPageVisible","checked","toggleLandingPage","prev","viewBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9a902115.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, push, onValue, remove, update } from \"firebase/database\";\r\n\r\n// ConfiguraciÃ³n de Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTzfDF8Hqxob52odaaoyUmTOhbu54jbIY\",\r\n  authDomain: \"mtgstats-864da.firebaseapp.com\",\r\n  databaseURL: \"https://mtgstats-864da-default-rtdb.firebaseio.com\",\r\n  projectId: \"mtgstats-864da\",\r\n  storageBucket: \"mtgstats-864da.appspot.com\",\r\n  messagingSenderId: \"68211953531\",\r\n  appId: \"1:68211953531:web:3619c6cc482a2bfeeb77de\",\r\n  measurementId: \"G-78HCZP9LD6\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\n\r\nexport { db, ref, set, push, onValue, remove, update };","import React, { useState, useEffect, useRef } from 'react';\r\nimport { ref, push, set, onValue, remove } from 'firebase/database';\r\nimport { db } from '../firebaseConfig';\r\n\r\n\r\nfunction LandingPage({ onGameSelect }) {\r\n  const [inputGameName, setGameName] = useState('');\r\n  const [inputPlayerName, setPlayerName] = useState('');\r\n  const [games, setGames] = useState([]);\r\n  const gameArray = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const gamesRef = ref(db, 'games');\r\n\r\n    onValue(gamesRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        const gameList = Object.keys(data).map((id) => ({\r\n          id,\r\n          gameName: data[id].gameName,\r\n        }));\r\n        gameArray.current = gameList;\r\n        setGames(gameList);\r\n      }\r\n    });\r\n    \r\n    const savedPlayerName = localStorage.getItem('playerName');\r\n    if (savedPlayerName) setPlayerName(savedPlayerName);\r\n    \r\n  }, []);\r\n\r\n  const removePlayerFromPreviousGame = () => {\r\n    const previousGameID = localStorage.getItem('gameID');\r\n    const playerID = localStorage.getItem('playerID');\r\n    \r\n    if (previousGameID && playerID) {\r\n      const playerRef = ref(db, `games/${previousGameID}/players/${playerID}`);\r\n      remove(playerRef)\r\n        .then(() => {\r\n          console.log(\"Jugador eliminado de la partida anterior\");\r\n\r\n          const gameRef = ref(db, `games/${previousGameID}/players`);\r\n          onValue(gameRef, (snapshot) => {\r\n            const players = snapshot.val();\r\n            if (!players || Object.keys(players).length === 0) {\r\n              remove(ref(db, `games/${previousGameID}`))\r\n                .then(() => console.log(\"Partida eliminada\"))\r\n                .catch((error) => console.error(\"Error al eliminar partida:\", error));\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => console.error(\"Error al eliminar jugador:\", error));\r\n    }\r\n  };\r\n\r\n  const handleGameSelect = (gameID) => {\r\n    if (!inputPlayerName) {\r\n      return alert(\"Error: Por favor ingresa un nombre de jugador.\");\r\n    }\r\n    if (gameID !== localStorage.getItem('gameID')) {\r\n      removePlayerFromPreviousGame();\r\n     \r\n    const playerID = localStorage.getItem('playerID') || push(ref(db, 'games')).key;\r\n    localStorage.setItem('playerID', playerID);\r\n    localStorage.setItem('playerName', inputPlayerName);\r\n    localStorage.setItem('gameID', gameID);\r\n\r\n    const gameRef = ref(db, `games/${gameID}/players/${playerID}`);\r\n\r\n    set(gameRef, {\r\n      playerName: inputPlayerName,\r\n      life: 40,\r\n      mana: {\r\n        a: 0,\r\n        b: 0,\r\n        c: 0,\r\n        d: 0,\r\n        e: 0,\r\n        x: 0,\r\n      },\r\n    \r\n    })\r\n      .then(() => {\r\n        alert(\"Jugador aÃ±adido a la partida existente\");\r\n        onGameSelect(gameID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al aÃ±adir jugador:\", error);\r\n      });\r\n  }\r\n};\r\n\r\n  const createGame = () => {\r\n    if (!inputPlayerName) {\r\n      return alert(\"Error: Por favor ingresa un nombre de jugador.\");\r\n    }\r\n    const namesArray = gameArray.current.map(game => game.gameName);\r\n\r\n    if (!inputGameName) {\r\n      return alert(\"Error: Por favor ingresa un nombre de partida.\");\r\n    }\r\n    if (namesArray.includes(inputGameName)) {\r\n      return alert(\"Error: partida ya existente\");\r\n    } else {\r\n      removePlayerFromPreviousGame();\r\n\r\n      const playerID = localStorage.getItem('playerID') || push(ref(db, 'games')).key;\r\n      localStorage.setItem('playerID', playerID);\r\n      localStorage.setItem('playerName', inputPlayerName);\r\n\r\n      const newGameRef = push(ref(db, 'games'));\r\n      const newGameID = newGameRef.key;\r\n      localStorage.setItem('gameID', newGameID);\r\n\r\n      set(newGameRef, {\r\n        gameName: inputGameName,\r\n        players: {\r\n          [playerID]: {\r\n            playerName: inputPlayerName,\r\n            life: 40,\r\n            mana: {\r\n              a: 0,\r\n              b: 0,\r\n              c: 0,\r\n              d: 0,\r\n              e: 0,\r\n              x: 0,\r\n            },\r\n          },\r\n        },\r\n      })\r\n        .then(() => {\r\n          alert(\"Partida creada\");\r\n          onGameSelect(newGameID);\r\n        })\r\n        .catch((error) => {\r\n          alert(\"Error: \" + error.message);\r\n        });\r\n    }\r\n  \r\n  \r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"landingPage\">\r\n      \r\n\r\n      <label>Ãnete a una partida o crea una nueva</label>\r\n      <input\r\n        className='input'\r\n        type=\"text\"\r\n        placeholder=\"Nombre de jugador\"\r\n        value={inputPlayerName}\r\n        onChange={(e) => setPlayerName(e.target.value)}\r\n      />\r\n\r\n      <div>\r\n        <label htmlFor=\"gameSelect\">Elige un juego ya creado: </label>\r\n        <select className='select' id=\"gameSelect\" onChange={(e) => handleGameSelect(e.target.value)}>\r\n          <option value=\"\" disabled selected>Seleccionar partida</option>\r\n          {games.map((game) => (\r\n            <option key={game.id} value={game.id}>\r\n              {game.gameName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <input\r\n        className='input'\r\n        type=\"text\"\r\n        placeholder=\"Crear partida\"\r\n        value={inputGameName}\r\n        onChange={(e) => setGameName(e.target.value)}\r\n      />\r\n      <button onClick={createGame}>Crear partida</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ref, onValue, update } from 'firebase/database';\r\nimport { db } from '../firebaseConfig';\r\n\r\nconst PrincipalPlayer = ({ gameID }) => {\r\n  const playerID = localStorage.getItem('playerID');\r\n  const playerRef = ref(db, `games/${gameID}/players/${playerID}`);\r\n\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [life, setLife] = useState(40);\r\n  const [mana, setMana] = useState({\r\n    a: 0,\r\n    b: 0,\r\n    c: 0,\r\n    d: 0,\r\n    e: 0,\r\n    x: 0,\r\n  });\r\n\r\n  // Cambiar vida y sincronizar con Firebase\r\n  const changeLife = (newLife) => {\r\n    setLife(newLife);\r\n    update(playerRef, { life: newLife });\r\n  };\r\n\r\n  const changeMana = (type, value) => {\r\n    const newMana = { ...mana, [type]: mana[type] + value };\r\n    setMana(newMana);\r\n    update(playerRef, { mana: newMana });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(playerRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setPlayerName(data.playerName || '');\r\n        setLife(data.life !== undefined ? data.life : 40);\r\n\r\n        if (JSON.stringify(data.mana) !== JSON.stringify(mana)) {\r\n          setMana(data.mana || {\r\n            a: 0,\r\n            b: 0,\r\n            c: 0,\r\n            d: 0,\r\n            e: 0,\r\n            x: 0,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [playerRef, mana]);\r\n\r\n  return (\r\n    <div className=\"principalPlayer\">\r\n      <div className=\"infoPP\">\r\n        <h2>{playerName}</h2>\r\n        <h2> {life}</h2>\r\n      </div>\r\n      <ul className=\"lifeButtons\">\r\n        <li>\r\n          <button onClick={() => changeLife(life - 1)}>-1</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={() => changeLife(life + 1)}>+1</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={() => changeLife(life - 5)}>-5</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={() => changeLife(life + 5)}>+5</button>\r\n        </li>\r\n      </ul>\r\n      <div className=\"manaButtons\">\r\n        {Object.keys(mana).map((color) => (\r\n          <div className='manaContenedor' key={color}>\r\n            <p >{color} {mana[color]}</p>\r\n            <button onClick={() => changeMana(color, -1)}>-1</button>\r\n            <button onClick={() => changeMana(color, +1)}>+1</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrincipalPlayer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ref, onValue } from 'firebase/database';\r\nimport { db } from '../firebaseConfig';\r\n\r\nconst Opponent = ({ opponentID, gameID }) => {\r\n  const [lifeCount, setLifeCount] = useState(40);\r\n  const [opponentName, setOpponentName] = useState('');\r\n  const [mana, setMana] = useState({\r\n    a: 0,\r\n    b: 0,\r\n    c: 0,\r\n    d: 0,\r\n    e: 0,\r\n    x: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!opponentID || !gameID) {\r\n      console.warn(\"Missing opponentID or gameID:\", { opponentID, gameID });\r\n      return;\r\n    }\r\n\r\n    const playerRef = ref(db, `games/${gameID}/players/${opponentID}`);\r\n\r\n    onValue(playerRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        setOpponentName(data.playerName || 'Jugador sin nombre');\r\n        setLifeCount(data.life !== undefined ? data.life : 40);\r\n        setMana({\r\n          a: data.mana.a || 0,\r\n          b: data.mana.b || 0,\r\n          c: data.mana.c || 0,\r\n          d: data.mana.d || 0,\r\n          e: data.mana.e || 0,\r\n          x: data.mana.x || 0,\r\n        });\r\n      } else {\r\n        console.log('Datos del oponente no encontrados.');\r\n      }\r\n    });\r\n  }, [opponentID, gameID]);\r\n\r\n  return (\r\n    <div className=\"oponente\">\r\n      <p>{opponentName}</p>\r\n      <h2>{lifeCount}</h2>\r\n      <ul>\r\n        {Object.entries(mana)\r\n          .filter(([_, value]) => value !== 0) \r\n          .map(([type, value]) => (\r\n            <li className='manaButtons' key={type}>\r\n              {type} {value}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Opponent;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PrincipalPlayer from './PrincipalPlayer';\r\nimport { ref, get, getDatabase, child } from 'firebase/database';\r\nimport Opponent from './Opponent'\r\n\r\n\r\n\r\nfunction Game( {gameID} ) {\r\n    const [gameName, setGameName] = useState('');\r\n    const [players, setPlayers] = useState([]); \r\n    const principalPlayerID = localStorage.getItem('playerID');   \r\n\r\n    if (!gameID && localStorage.getItem(\"gameID\")) {\r\n      gameID = localStorage.getItem(\"gameID\");\r\n    } \r\n\r\n    useEffect(() => {\r\n        if (gameID) {\r\n          const dbRef = ref(getDatabase());\r\n    \r\n    \r\n          get(child(dbRef, `games/${gameID}`))\r\n            .then((snapshot) => {\r\n              if (snapshot.exists()) {\r\n                const data = snapshot.val();\r\n                setGameName(data.gameName); \r\n                \r\n                if (data.players) {\r\n                  setPlayers(Object.keys(data.players)); \r\n\r\n                } else {\r\n                  setPlayers([]); \r\n                }\r\n                \r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n        }\r\n      }, [gameID]);\r\n\r\n      if (!gameID || !principalPlayerID) {\r\n        return (\r\n          <div className=\"game\">\r\n            <h2 className=\"gameName\">Por favor, selecciona o crea una partida.</h2>\r\n          </div>\r\n        );\r\n      }\r\n\r\n  return (\r\n    <div className='game'>\r\n        <h2 className='gameName'> Partida: {gameName}</h2>\r\n        <PrincipalPlayer gameID={gameID} />\r\n        <ul className=\"listaDeOponentes\">\r\n            {players\r\n            .filter((playerID) => playerID !== principalPlayerID)\r\n            .map((playerID) => {\r\n            return (\r\n                <li  key={playerID}>\r\n                <Opponent opponentID={playerID} gameID={gameID} />\r\n                </li>\r\n            );\r\n            })}\r\n        </ul>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game\r\n","import React, { useState } from 'react';\r\nimport LandingPage from './Componets/LandingPage';\r\nimport Game from './Componets/Game';\r\nimport './Styles/app.css';\r\n\r\nfunction App() {\r\n  const [gameID, setGameID] = useState('');\r\n  const [isLandingPageVisible, setIsLandingPageVisible] = useState(false);\r\n\r\n  const handleSetGameID = (id) => {\r\n    setGameID(id);\r\n    setIsLandingPageVisible(false); \r\n  };\r\n\r\n  const toggleLandingPage = () => {\r\n    setIsLandingPageVisible((prev) => !prev);\r\n    console.log(isLandingPageVisible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"hamburger\">\r\n        <input type=\"checkbox\" checked={isLandingPageVisible} onChange={toggleLandingPage} />\r\n        <svg viewBox=\"0 0 32 32\">\r\n          <path\r\n            className=\"line line-top-bottom\"\r\n            d=\"M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22\"\r\n          ></path>\r\n          <path className=\"line\" d=\"M7 16 27 16\"></path>\r\n        </svg>\r\n      </label>\r\n  \r\n      {isLandingPageVisible && (\r\n        <LandingPage onGameSelect={handleSetGameID} />\r\n      )}\r\n  \r\n      <Game gameID={gameID} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './Styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}