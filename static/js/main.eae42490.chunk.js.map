{"version":3,"sources":["firebaseConfig.js","Usuario.jsx","Oponente.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","Usuario","_ref","gameId","nombreJugador","localStorage","getItem","vida","setVida","useState","useEffect","jugadorRef","ref","onValue","snapshot","val","actualizarVida","nuevaVida","set","React","createElement","className","onClick","Oponente","opponentID","vidaRef","App","gameID","setGameID","opponents","setOpponents","userID","gameRef","playerRef","push","update","id","players","playerList","Object","values","filter","remove","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8PAIA,MAWMA,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,qDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAIXC,EAAKC,YAAYX,G,KCiBRY,MA7BCC,IAAiB,IAAhB,OAAEC,GAAQD,EACzB,MAAME,EAAgBC,aAAaC,QAAQ,kBACpCC,EAAMC,GAAWC,mBAAS,IAEjCC,oBAAU,KACR,MAAMC,EAAaC,YAAIb,EAAI,SAASI,eAAoBC,UACxDS,YAAQF,EAAaG,IACnBN,EAAQM,EAASC,OAAS,OAE3B,CAACZ,EAAQC,IAEZ,MAAMY,EAAkBC,IACtBT,EAAQS,GACR,MAAMN,EAAaC,YAAIb,EAAI,SAASI,eAAoBC,UACxDc,YAAIP,EAAYM,IAGlB,OACEE,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAKhB,GACLe,IAAAC,cAAA,UAAI,SAAOb,GACXY,IAAAC,cAAA,UAAQE,QAASA,IAAMN,EAAeT,EAAO,IAAI,MACjDY,IAAAC,cAAA,UAAQE,QAASA,IAAMN,EAAeT,EAAO,IAAI,MACjDY,IAAAC,cAAA,UAAQE,QAASA,IAAMN,EAAeT,EAAO,IAAI,MACjDY,IAAAC,cAAA,UAAQE,QAASA,IAAMN,EAAeT,EAAO,IAAI,QCPxCgB,MAlBErB,IAAqB,IAApB,WAAEsB,GAAYtB,EAC5B,MAAOK,EAAMC,GAAWC,mBAAS,IASjC,OAPAC,oBAAU,KACN,MAAMe,EAAUb,YAAIb,EAAI,SAASyB,UACjCX,YAAQY,EAAUX,IACdN,EAAQM,EAASC,UAEtB,CAACS,IAGAL,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,SAAG,SAAOb,KC0BPmB,MAnCf,WACE,MAAOC,EAAQC,GAAanB,mBAAS,OAC9BoB,EAAWC,GAAgBrB,mBAAS,IACrCsB,EAAS1B,aAAaC,QAAQ,UAsBpC,OApBAI,oBAAU,KACN,MAAMsB,EAAUpB,YAAIb,EAAI,SAAS4B,aAG3BM,EAAYC,YAAKF,GAWvB,OAVAG,YAAOF,EAAW,CAAEG,GAAIL,IAGxBlB,YAAQmB,EAAUlB,IACd,MAAMuB,EAAUvB,EAASC,MACnBuB,EAAaD,EAAUE,OAAOC,OAAOH,GAAW,GACtDP,EAAaQ,EAAWG,OAAOL,GAAMA,IAAOL,MAIzC,KACHW,YAAOT,KAEZ,CAACN,EAAQI,IAGRZ,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAACnB,EAAO,CAAC8B,OAAQA,IAChBF,EAAUc,IAAInB,GACXL,IAAAC,cAACG,EAAQ,CAACqB,IAAKpB,EAAYA,WAAYA,OCxBtCqB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK9C,IAAkD,IAAjD,OAAE+C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASnD,EACpE+C,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCADQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvC,IAAAC,cAACD,IAAMwC,WAAU,KACfxC,IAAAC,cAACM,EAAG,QAORmB,M","file":"static/js/main.eae42490.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, push, onValue, remove, update } from \"firebase/database\";\r\n\r\n// ConfiguraciÃ³n de Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTzfDF8Hqxob52odaaoyUmTOhbu54jbIY\",\r\n  authDomain: \"mtgstats-864da.firebaseapp.com\",\r\n  databaseURL: \"https://mtgstats-864da-default-rtdb.firebaseio.com\",\r\n  projectId: \"mtgstats-864da\",\r\n  storageBucket: \"mtgstats-864da.appspot.com\",\r\n  messagingSenderId: \"68211953531\",\r\n  appId: \"1:68211953531:web:3619c6cc482a2bfeeb77de\",\r\n  measurementId: \"G-78HCZP9LD6\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\n\r\nexport { db, ref, set, push, onValue, remove, update };","import React, { useState, useEffect } from 'react';\r\nimport { db } from './firebaseConfig';\r\nimport { ref, set, onValue } from 'firebase/database';\r\n\r\nconst Usuario = ({ gameId }) => {\r\n  const nombreJugador = localStorage.getItem('nombreJugador');\r\n  const [vida, setVida] = useState(40);\r\n\r\n  useEffect(() => {\r\n    const jugadorRef = ref(db, `games/${gameId}/jugadores/${nombreJugador}/vida`);\r\n    onValue(jugadorRef, (snapshot) => {\r\n      setVida(snapshot.val() || 40);\r\n    });\r\n  }, [gameId, nombreJugador]);\r\n\r\n  const actualizarVida = (nuevaVida) => {\r\n    setVida(nuevaVida);\r\n    const jugadorRef = ref(db, `games/${gameId}/jugadores/${nombreJugador}/vida`);\r\n    set(jugadorRef, nuevaVida);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contenedorUsuario\">\r\n      <h1>{nombreJugador}</h1>\r\n      <h2>Vida: {vida}</h2>\r\n      <button onClick={() => actualizarVida(vida + 1)}>+1</button>\r\n      <button onClick={() => actualizarVida(vida - 1)}>-1</button>\r\n      <button onClick={() => actualizarVida(vida + 5)}>+5</button>\r\n      <button onClick={() => actualizarVida(vida - 5)}>-5</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Usuario;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, ref, onValue } from './firebaseConfig';\r\n\r\nconst Oponente = ({ opponentID }) => {\r\n    const [vida, setVida] = useState(40);\r\n\r\n    useEffect(() => {\r\n        const vidaRef = ref(db, `users/${opponentID}/vida`);\r\n        onValue(vidaRef, (snapshot) => {\r\n            setVida(snapshot.val());\r\n        });\r\n    }, [opponentID]);\r\n\r\n    return (\r\n        <div className=\"oponente\">\r\n            <h2>Oponente</h2>\r\n            <p>Vida: {vida}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Oponente;\r\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db, ref, push, remove, onValue, update } from './firebaseConfig';\r\nimport LandingPage from './LandingPage';\r\nimport Usuario from './Usuario';\r\nimport Oponente from './Oponente';\r\n\r\nfunction App() {\r\n  const [gameID, setGameID] = useState(null);\r\n  const [opponents, setOpponents] = useState([]);\r\n  const userID = localStorage.getItem('userID');\r\n\r\n  useEffect(() => {\r\n      const gameRef = ref(db, `games/${gameID}/players`);\r\n\r\n      // Agregar jugador a la partida usando update en lugar de set\r\n      const playerRef = push(gameRef);\r\n      update(playerRef, { id: userID });\r\n\r\n      // Escuchar cambios en los jugadores de la partida\r\n      onValue(gameRef, (snapshot) => {\r\n          const players = snapshot.val();\r\n          const playerList = players ? Object.values(players) : [];\r\n          setOpponents(playerList.filter(id => id !== userID));\r\n      });\r\n\r\n      // Eliminar jugador al desconectarse\r\n      return () => {\r\n          remove(playerRef);\r\n      };\r\n  }, [gameID, userID]);\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <Usuario userID={userID} />\r\n          {opponents.map(opponentID => (\r\n              <Oponente key={opponentID} opponentID={opponentID} />\r\n          ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}